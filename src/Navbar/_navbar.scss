@import "../bootstrap";

// Navbar

$navbar-padding-y:                  $spacer / 2 !default;
$navbar-padding-x:                  .5625rem !default;

$navbar-nav-link-padding-x:         .5rem !default;

$navbar-brand-font-size:            $font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height:                   $font-size-base * $line-height-base + $nav-link-padding-y * 2 !default;
$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;
$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;

$navbar-brand-text-margin:          .125rem !default;

$navbar-toggler-padding-y:          .25rem !default;
$navbar-toggler-padding-x:          .75rem !default;
$navbar-toggler-font-size:          $font-size-lg !default;
$navbar-toggler-border-radius:      $btn-border-radius !default;

$navbar-dark-color:                 rgba($white, .5) !default;
$navbar-dark-hover-color:           rgba($white, .75) !default;
$navbar-dark-active-color:          $white !default;
$navbar-dark-disabled-color:        rgba($white, .25) !default;
$navbar-dark-toggler-icon-bg:       str-replace(url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e"), "#", "%23") !default;
$navbar-dark-toggler-border-color:  rgba($white, .1) !default;

$navbar-light-color:                rgba($black, .5) !default;
$navbar-light-hover-color:          rgba($black, .7) !default;
$navbar-light-active-color:         rgba($black, .9) !default;
$navbar-light-disabled-color:       rgba($black, .3) !default;
$navbar-light-toggler-icon-bg:      str-replace(url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e"), "#", "%23") !default;
$navbar-light-toggler-border-color: rgba($black, .1) !default;

$navbar-light-brand-color:                $navbar-light-active-color !default;
$navbar-light-brand-hover-color:          $navbar-light-active-color !default;
$navbar-dark-brand-color:                 $navbar-dark-active-color !default;
$navbar-dark-brand-hover-color:           $navbar-dark-active-color !default;


/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x           : 10px !default;
$hamburger-padding-y           : 10px !default;
$hamburger-layer-width         : 30px !default;
$hamburger-layer-height        : 3px !default;
$hamburger-layer-spacing       : 5px !default;
$hamburger-layer-color         : #000 !default;
$hamburger-layer-border-radius : 3px !default;
$hamburger-hover-opacity       : 0.7 !default;
$hamburger-active-layer-color  : $hamburger-layer-color !default;
$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter   : false !default;
$hamburger-hover-filter       : opacity(50%) !default;
$hamburger-active-hover-filter: $hamburger-hover-filter !default;

.navbar {

    align-items: center;
    display: flex;
    justify-content: space-between;
    padding: $navbar-padding-y $navbar-padding-x;
}

.navbar-sticky {

    box-shadow: 0 1px 2px 0 rgba(60, 64, 67, .3), 0 2px 6px 2px rgba(60, 64, 67, .15);
    position: sticky;
    top: 0;
}

.navbar-groups {

    align-items: center;
    display: flex;
    justify-content: space-between;
}

.navbar-brand {
    display: inline-block;
    // padding-top: $navbar-brand-padding-y;
    // padding-bottom: $navbar-brand-padding-y;
    margin-right: $navbar-padding-x;
    @include font-size($navbar-brand-font-size);
    line-height: inherit;
    white-space: nowrap;

    @include hover-focus {
        text-decoration: none;
    }
}

.navbar-brand-text {

    margin-left: $navbar-brand-text-margin;
    vertical-align: middle;
}

// Hamburger
// ==================================================
.hamburger {

    line-height: 1 !important;
    padding: $hamburger-padding-y $hamburger-padding-x;
    display: inline-block;
    cursor: pointer;

    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-timing-function: linear;

    // Normalize (<button>)
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;

    &:hover {
        @if $hamburger-hover-use-filter==true {
            filter: $hamburger-hover-filter;
        }

        @else {
            opacity: $hamburger-hover-opacity;
        }
    }

    &[aria-pressed] {
        &:hover {
            @if $hamburger-hover-use-filter==true {
                filter: $hamburger-active-hover-filter;
            }

            @else {
                opacity: $hamburger-active-hover-opacity;
            }
        }

        .hamburger-inner,
        .hamburger-inner::before,
        .hamburger-inner::after {
            background-color: $hamburger-active-layer-color;
        }
    }
}

.hamburger-box {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
    display: inline-block;
    position: relative;
}

.hamburger-inner {
    display: block;
    top: 50%;
    margin-top: $hamburger-layer-height / -2;

    &,
    &::before,
    &::after {
        width: $hamburger-layer-width;
        height: $hamburger-layer-height;
        background-color: $hamburger-layer-color;
        border-radius: $hamburger-layer-border-radius;
        position: absolute;
        transition-property: transform;
        transition-duration: 0.15s;
        transition-timing-function: ease;
    }

    &::before,
    &::after {
        content: "";
        display: block;
    }

    &::before {
        top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }

    &::after {
        bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
}

.hamburger--squeeze {
    .hamburger-inner {
        transition-duration: 0.075s;
        transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

        &::before {
            transition: top 0.075s 0.12s ease,
                opacity 0.075s ease;
        }

        &::after {
            transition: bottom 0.075s 0.12s ease,
                transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);
        }
    }

    &[aria-pressed] {
        .hamburger-inner {
            transform: rotate(45deg);
            transition-delay: 0.12s;
            transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

            &::before {
                top: 0;
                opacity: 0;
                transition: top 0.075s ease,
                    opacity 0.075s 0.12s ease;
            }

            &::after {
                bottom: 0;
                transform: rotate(-90deg);
                transition: bottom 0.075s ease,
                    transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
            }
        }
    }
}


// // Navbar nav
// //
// // Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

// .navbar-nav {
//     display: flex;
//     flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
//     padding-left: 0;
//     margin-bottom: 0;
//     list-style: none;

//     .nav-link {
//         padding-right: 0;
//         padding-left: 0;
//     }

//     .dropdown-menu {
//         position: static;
//         float: none;
//     }
// }


// // Navbar text
// //
// //

// .navbar-text {
//     display: inline-block;
//     padding-top: $nav-link-padding-y;
//     padding-bottom: $nav-link-padding-y;
// }


// // Responsive navbar
// //
// // Custom styles for responsive collapsing and toggling of navbar contents.
// // Powered by the collapse Bootstrap JavaScript plugin.

// // When collapsed, prevent the toggleable navbar contents from appearing in
// // the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// // on the `.navbar` parent.
// .navbar-collapse {
//     flex-basis: 100%;
//     flex-grow: 1;
//     // For always expanded or extra full navbars, ensure content aligns itself
//     // properly vertically. Can be easily overridden with flex utilities.
//     align-items: center;
// }

// // Button for toggling the navbar when in its collapsed state
// .navbar-toggler {
//     padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
//     @include font-size($navbar-toggler-font-size);
//     line-height: 1;
//     background-color: transparent; // remove default button style
//     border: $border-width solid transparent; // remove default button style
//     @include border-radius($navbar-toggler-border-radius);

//     @include hover-focus {
//         text-decoration: none;
//     }
// }

// // Keep as a separate element so folks can easily override it with another icon
// // or image file as needed.
// .navbar-toggler-icon {
//     display: inline-block;
//     width: 1.5em;
//     height: 1.5em;
//     vertical-align: middle;
//     content: "";
//     background: no-repeat center center;
//     background-size: 100% 100%;
// }

// // Generate series of `.navbar-expand-*` responsive classes for configuring
// // where your navbar collapses.
// .navbar-expand {
//     @each $breakpoint in map-keys($grid-breakpoints) {
//         $next: breakpoint-next($breakpoint, $grid-breakpoints);
//         $infix: breakpoint-infix($next, $grid-breakpoints);

//         &#{$infix} {
//             @include media-breakpoint-down($breakpoint) {

//                 >.container,
//                 >.container-fluid {
//                     padding-right: 0;
//                     padding-left: 0;
//                 }
//             }

//             @include media-breakpoint-up($next) {
//                 flex-flow: row nowrap;
//                 justify-content: flex-start;

//                 .navbar-nav {
//                     flex-direction: row;

//                     .dropdown-menu {
//                         position: absolute;
//                     }

//                     .nav-link {
//                         padding-right: $navbar-nav-link-padding-x;
//                         padding-left: $navbar-nav-link-padding-x;
//                     }
//                 }

//                 // For nesting containers, have to redeclare for alignment purposes
//                 >.container,
//                 >.container-fluid {
//                     flex-wrap: nowrap;
//                 }

//                 .navbar-collapse {
//                     display: flex !important; // stylelint-disable-line declaration-no-important

//                     // Changes flex-bases to auto because of an IE10 bug
//                     flex-basis: auto;
//                 }

//                 .navbar-toggler {
//                     display: none;
//                 }
//             }
//         }
//     }
// }


// // Navbar themes
// //
// // Styles for switching between navbars with light or dark background.

// // Dark links against a light background
// .navbar-light {
//     .navbar-brand {
//         color: $navbar-light-brand-color;

//         @include hover-focus {
//             color: $navbar-light-brand-hover-color;
//         }
//     }

//     .navbar-nav {
//         .nav-link {
//             color: $navbar-light-color;

//             @include hover-focus {
//                 color: $navbar-light-hover-color;
//             }

//             &.disabled {
//                 color: $navbar-light-disabled-color;
//             }
//         }

//         .show>.nav-link,
//         .active>.nav-link,
//         .nav-link.show,
//         .nav-link.active {
//             color: $navbar-light-active-color;
//         }
//     }

//     .navbar-toggler {
//         color: $navbar-light-color;
//         border-color: $navbar-light-toggler-border-color;
//     }

//     .navbar-toggler-icon {
//         background-image: $navbar-light-toggler-icon-bg;
//     }

//     .navbar-text {
//         color: $navbar-light-color;

//         a {
//             color: $navbar-light-active-color;

//             @include hover-focus {
//                 color: $navbar-light-active-color;
//             }
//         }
//     }
// }

// // White links against a dark background
// .navbar-dark {
//     .navbar-brand {
//         color: $navbar-dark-brand-color;

//         @include hover-focus {
//             color: $navbar-dark-brand-hover-color;
//         }
//     }

//     .navbar-nav {
//         .nav-link {
//             color: $navbar-dark-color;

//             @include hover-focus {
//                 color: $navbar-dark-hover-color;
//             }

//             &.disabled {
//                 color: $navbar-dark-disabled-color;
//             }
//         }

//         .show>.nav-link,
//         .active>.nav-link,
//         .nav-link.show,
//         .nav-link.active {
//             color: $navbar-dark-active-color;
//         }
//     }

//     .navbar-toggler {
//         color: $navbar-dark-color;
//         border-color: $navbar-dark-toggler-border-color;
//     }

//     .navbar-toggler-icon {
//         background-image: $navbar-dark-toggler-icon-bg;
//     }

//     .navbar-text {
//         color: $navbar-dark-color;

//         a {
//             color: $navbar-dark-active-color;

//             @include hover-focus {
//                 color: $navbar-dark-active-color;
//             }
//         }
//     }
// }